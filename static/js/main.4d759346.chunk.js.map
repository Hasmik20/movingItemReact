{"version":3,"sources":["component/PopUpTable.jsx","component/MovingItems.jsx","component/MoveItemClass.jsx","App.js","reportWebVitals.js","index.js"],"names":["PopUpTable","count","useState","close","setClosed","style","position","top","left","className","onClick","e","MovingItem","setCount","click","setClick","stopAnimation","setStopAnimation","showPopUpTable","setShowPopUpTable","pauseItem","setPauseItem","randomColor","Math","floor","random","toString","box","target","backgroundColor","stopPropagation","onMouseOver","onAnimationEnd","console","log","MoveCircle","state","handelMoveItem","setState","handelStopAnimation","handelPauseItem","this","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d759346.chunk.js","sourcesContent":["import {useState} from 'react'\r\n\r\nconst PopUpTable = ({count}) => {\r\n const [close, setClosed] = useState(false)\r\n\r\n  const handelDelete = (e) =>{\r\n    // e.target.parentElement.style.display = \"none\"\r\n    setClosed(true)\r\n  }\r\n  return (  \r\n    close === false ? <div style={{position:\"relative\" }}>\r\n      <div style={{position:\"absolute\",top:\"1%\", left:\"45%\"}}>\r\n      <div className=\"popUpTable\">\r\n          <p>Your score: {count}</p>\r\n          <span onClick={handelDelete}>X</span>\r\n        </div>\r\n      </div>  \r\n    </div> : null\r\n  );\r\n}\r\n \r\nexport default PopUpTable;","import {useState, useEffect} from 'react'\r\n\r\nimport PopUpTable from './PopUpTable'\r\n\r\n\r\nconst MovingItem = () => {\r\n\r\n  const [count,setCount] = useState(0)\r\n  const [click,setClick] = useState(false)\r\n  const [stopAnimation, setStopAnimation] = useState(false)\r\n  const [showPopUpTable, setShowPopUpTable] = useState(false)\r\n  const [pauseItem, setPauseItem] = useState(false)\r\n let randomColor = Math.floor(Math.random()*16777215).toString(16);\r\n\r\n  const handelMoveItem = (e) =>{\r\n    const box = e.target\r\n    setClick(click)\r\n    setCount(count + 1)\r\n    setStopAnimation(true)\r\n    setPauseItem(false)\r\n    setShowPopUpTable(false)\r\n    // box.classList.add('moveItem')\r\n    box.style.backgroundColor = \"#\" + randomColor;\r\n    e.stopPropagation() \r\n  }\r\n  const handelStopAnimation = (e) =>{\r\n   setStopAnimation(false)\r\n   setShowPopUpTable(true)\r\n   \r\n    // e.target.classList.remove('moveItem')\r\n    console.log(stopAnimation)\r\n  }\r\n  const handelPauseItem = (e) =>{\r\n  setPauseItem(true)\r\n    //  e.target.classList.add('pauseItem')\r\n\r\n   }\r\n  return ( \r\n    <div>\r\n      <div >\r\n       {showPopUpTable &&  <PopUpTable count={count}/>}\r\n      </div>\r\n      <div className={`item ${stopAnimation && \"moveItem\"} || ${!stopAnimation && \"\" } ||\r\n                       ${pauseItem && \"pauseItem\"}\r\n                       `} \r\n                       onClick={handelMoveItem} onMouseOver={handelPauseItem }\r\n                      onAnimationEnd={handelStopAnimation}\r\n                              >\r\n        <p className=\"count\"> {count} </p>\r\n      </div>\r\n   \r\n    </div>\r\n   );\r\n}\r\n \r\nexport default MovingItem;","import React, { Component } from 'react';\r\nimport PopUpTable from './PopUpTable'\r\n\r\nclass MoveCircle extends Component {\r\n  state = { \r\n    count:0,\r\n    stopAnimation:false,\r\n    showPopUpTable:false,\r\n    pauseItem:false\r\n   }\r\n  \r\n    handelMoveItem = (e) =>{\r\n    const box = e.target\r\n    let randomColor = Math.floor(Math.random()*16777215).toString(16);\r\n    this.setState({count:this.state.count +1 })\r\n    this.setState({stopAnimation:false})\r\n    this.setState({stopAnimation:true })\r\n    this.setState({ pauseItem:false })\r\n    this.setState({showPopUpTable:false })\r\n    // box.classList.add('moveItem')\r\n    box.style.backgroundColor = \"#\" + randomColor;\r\n   \r\n  }\r\n  handelStopAnimation = (e) =>{\r\n    this.setState({stopAnimation:false})\r\n    this.setState({showPopUpTable:true})\r\n    //  e.target.classList.remove('moveItem')\r\n   }\r\n    handelPauseItem = (e) =>{\r\n      this.setState({pauseItem:true})\r\n      //  e.target.classList.add('pauseItem')\r\n  \r\n     }\r\n  render() { \r\n    return ( \r\n      <div>\r\n         <div >\r\n           {this.state.showPopUpTable &&  <PopUpTable count={this.state.count}/>}\r\n       </div>\r\n       <div className={`item ${this.state.stopAnimation && \"moveItem\"} || ${!this.state.stopAnimation && \"\" } ||\r\n                       ${this.state.pauseItem && \"pauseItem\"}\r\n                       `} \r\n                       onClick={this.handelMoveItem} onMouseOver={this.handelPauseItem }\r\n                      onAnimationEnd={this.handelStopAnimation}\r\n                              >\r\n        <p className=\"count\"> {this.state.count} </p>\r\n      </div>\r\n    \r\n    </div>\r\n     );\r\n  }\r\n}\r\n \r\nexport default MoveCircle;","import MovingItem from './component/MovingItems';\nimport MoveCircle from './component/MoveItemClass';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>Function Component </h2>\n        <p className=\"appP\">*MouseOver to pause the ball </p>\n      <MovingItem />\n      <h2>Class Component</h2>\n      <MoveCircle />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}